---
# Install docker and do initial setup on x86-64-based  systems
- import_role:
    name: geerlingguy.docker
  vars:
    docker_edition: 'ce'
    docker_package_state: latest
    docker_service_state: started
    docker_service_enabled: true
    docker_restart_handler_state: restarted
    docker_users:
    - "{{ default_user }}"
    docker_install_compose: false
  when: ansible_architecture == 'x86_64'

# Install docker and do initial setup on ARM-based systems
- import_role:
    name: geerlingguy.docker_arm
  vars:
    docker_users:
    - "{{ default_user }}"
    docker_install_compose: false
  when: ansible_architecture == 'armv7l'

# Install pip, then install docker python library
- import_role:
    name: geerlingguy.pip
  vars:
    pip_package: python3-pip
    pip_executable: pip3

- name: install docker-related pip packages
  pip:
    name: "{{ pip_install_docker_packages }}"
    executable: pip3
    state: latest

- name: Mount docker config volume 
  mount:
    state: mounted
    path: "{{ config_volume_mountpoint }}"
    src: "{{ config_volume_device }}"
    fstype: ext4
    opts: noatime
  when: config_volume_device is defined and config_volume_mountpoint is defined

- name: Create directory for docker-compose projects
  file:
    state: directory
    path: "{{ docker_compose_project_dir }}"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: '0755'
