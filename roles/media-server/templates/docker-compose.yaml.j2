version: "3"
services:
  plex:
    image: linuxserver/plex
    container_name: plex
    environment:
      - PUID={{ default_container_puid }}
      - PGID={{ default_container_pgid }}
      - VERSION=docker
      - UMASK_SET={{ default_container_umask }}
    ports:
      - 32400:32400
      - 32400:32400/udp
      - 32469:32469
      - 32469:32469/udp
      - 5353:5353/udp
      - 1900:1900/udp
    volumes:
      - {{ config_volume_dir }}/plex:/config
      - {{ media_volume_media_dir }}:/media
      - /transcode
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID={{ default_container_puid }}
      - PGID={{ default_container_pgid }}
      - TZ={{ default_container_timezone }}
      - UMASK_SET={{ default_container_umask }}
    volumes:
      - {{ config_volume_dir }}/sonarr:/config
      - {{ media_volume_tv_dir }}:/tv
      - {{ media_volume_downloads_dir }}:/downloads
    networks:
      - traefik_proxy
      - default
    ports:
      - {{ sonarr_webui_port }}:{{ sonarr_webui_port }}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.port={{ sonarr_webui_port }}"
      - "traefik.http.middlewares.sonarr-https.redirectscheme.scheme=https"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.{{ traefik_default_domain }}`)"
      - "traefik.http.routers.sonarr.entrypoints=http,https"
      - "traefik.http.routers.sonarr.tls.certresolver=myhttpchallenge"
      - "traefik.http.middlewares.sonarr-auth.basicauth.users={{ basic_auth_t0 }}"
      - "traefik.http.routers.sonarr.middlewares=sonarr-auth@docker,sonarr-https@docker"

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID={{ default_container_puid }}
      - PGID={{ default_container_pgid }}
      - TZ={{ default_container_timezone }}
      - UMASK_SET={{ default_container_umask }}
    volumes:
      - {{ config_volume_dir }}/radarr:/config
      - {{ media_volume_movies_dir }}:/movies
      - {{ media_volume_downloads_dir }}:/downloads
    networks:
      - traefik_proxy
      - default
    ports:
      - {{ radarr_webui_port }}:{{ radarr_webui_port }}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.port={{ radarr_webui_port }}"
      - "traefik.http.middlewares.radarr-https.redirectscheme.scheme=https"
      - "traefik.http.routers.radarr.rule=Host(`radarr.{{ traefik_default_domain }}`)"
      - "traefik.http.routers.radarr.entrypoints=http,https"
      - "traefik.http.routers.radarr.tls.certresolver=myhttpchallenge"
      - "traefik.http.middlewares.radarr-auth.basicauth.users={{ basic_auth_t0 }}"
      - "traefik.http.routers.radarr.middlewares=radarr-auth@docker,radarr-https@docker"

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID={{ default_container_puid }}
      - PGID={{ default_container_pgid }}
      - TZ={{ default_container_timezone }}
      - UMASK_SET={{ default_container_umask }}
      - WEBUI_PORT={{ qbittorrent_webui_port }}
    volumes:
      - {{ config_volume_dir }}/qbittorrent:/config
      - {{ media_volume_downloads_dir }}:/downloads
    networks:
      - traefik_proxy
      - default
    ports:
      - 6881:6881
      - 6881:6881/udp
      - {{ qbittorrent_webui_port }}:{{ qbittorrent_webui_port }}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.port={{ qbittorrent_webui_port }}"
      - "traefik.http.routers.qb.rule=Host(`qb.{{ traefik_default_domain }}`)"
      - "traefik.http.routers.qb.entrypoints=https"
      - "traefik.http.routers.qb.tls.certresolver=myhttpchallenge"
      - "traefik.http.middlewares.qb-headers.headers.customrequestheaders.X-Frame-Options=SAMEORIGIN"
      - "traefik.http.middlewares.qb-headers.headers.customrequestheaders.Referer="
      - "traefik.http.middlewares.qb-headers.headers.customrequestheaders.Origin="
      - "traefik.http.middlewares.qb-auth.basicauth.users={{ basic_auth_t0 }}"
      - "traefik.http.routers.qb.middlewares=qb-headers@docker,qb-auth@docker"
      - "traefik.http.services.qb.loadbalancer.server.port={{ qbittorrent_webui_port }}"
      - "traefik.http.services.qb.loadbalancer.passhostheader=false"

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID={{ default_container_puid }}
      - PGID={{ default_container_pgid }}
      - TZ={{ default_container_timezone }}
    volumes:
      - {{ config_volume_dir }}/ombi:/config
    networks:
      - traefik_proxy
      - default
    ports:
      - {{ ombi_webui_port }}:{{ ombi_webui_port }}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.port={{ ombi_webui_port }}"
      - "traefik.http.routers.ombi.rule=Host(`requests.{{ traefik_default_domain }}`, `ombi.{{ traefik_default_domain }}`)"
      - "traefik.http.routers.ombi.entrypoints=https"
      - "traefik.http.routers.ombi.tls.certresolver=myhttpchallenge"

  droppy:
    image: silverwind/droppy
    container_name: droppy
    environment:
      - UID={{ default_container_puid }}
      - GID={{ default_container_pgid }}
    volumes:
      - {{ config_volume_dir }}/droppy:/config
      - {{ media_volume_media_dir }}:/files
    networks:
      - traefik_proxy
    ports:
      - {{ droppy_webui_external_port }}:{{ droppy_webui_internal_port }}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.port={{ droppy_webui_external_port }}"
      - "traefik.http.middlewares.droppy-https.redirectscheme.scheme=https"
      - "traefik.http.routers.droppy.rule=Host(`droppy.{{ traefik_default_domain }}`)"
      - "traefik.http.routers.droppy.entrypoints=http,https"
      - "traefik.http.routers.droppy.tls.certresolver=myhttpchallenge"
      - "traefik.http.routers.droppy.middlewares=droppy-https@docker"

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
